name: Deploy RecipeHub

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -e

            echo ">>> Ensuring deployment directories exist..."
            mkdir -p ~/foodrecipe/backend
            mkdir -p ~/foodrecipe/frontend

            echo ">>> Installing required packages..."
            sudo apt-get update -y
            sudo apt-get install -y git openjdk-17-jdk maven mysql-client nodejs npm nginx

            # --- Backend ---
            BACKEND_DIR=~/foodrecipe/backend
            if [ ! -d "$BACKEND_DIR/.git" ]; then
              echo ">>> Cloning backend repo..."
              git clone https://github.com/Keerthipriya910/recipehub-aws-backend.git "$BACKEND_DIR"
            else
              echo ">>> Pulling latest backend changes..."
              cd "$BACKEND_DIR"
              git pull || true
            fi

            echo ">>> Building backend..."
            cd "$BACKEND_DIR"
            mvn clean package -DskipTests

            echo ">>> Restarting backend..."
            pkill -f 'java -jar' || true
            nohup java -jar target/*-SNAPSHOT.jar > backend.log 2>&1 &

            # --- Frontend ---
            FRONTEND_DIR=~/foodrecipe/frontend
            if [ ! -d "$FRONTEND_DIR/.git" ]; then
              echo ">>> Cloning frontend repo..."
              git clone https://github.com/Keerthipriya910/recipehub-aws-frontend.git "$FRONTEND_DIR"
            else
              echo ">>> Pulling latest frontend changes..."
              cd "$FRONTEND_DIR"
              git pull || true
            fi

            echo ">>> Building frontend..."
            cd "$FRONTEND_DIR"
            npm install
            npm run build

            echo ">>> Deploying frontend to Nginx..."
            sudo rm -rf /var/www/html/*
            sudo cp -r dist/* /var/www/html/
            sudo systemctl restart nginx

            echo "âœ… Deployment finished!"
